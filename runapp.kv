#:import Factory kivy.factory.Factory
WindowManager:
    MainWindow:
    QnAWindow:
    HistoryWindow:
    QuestionHistory:
    QnAHistoryWindow:
    SettingWindow:


<MainWindow>:
    name: 'main'

    RelativeLayout:
        RelativeLayout:
            Image:
                source: 'images/pink.jpg'
                allow_stretch: True
                keep_ratio: False

            RelativeLayout:
                id: logo
                #pos_hint: {'center_x': 0.5, 'center_y': 0.6}
                size_hint: (0.6, 0.25)
                Button:
                    id: main_btn
                    background_color: (1,0,0,0)
                    background_normal: ''
                    size: root.size
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                    on_release:
                        app.root.current = 'qna'
                        app.root.get_screen('qna').previous_screen = 'main'
                        root.manager.transition.direction = 'left'
                        app.switch_screen.play()

                Image:
                    source: 'images/color_stain.png'
                    color: (1,1,1,0.5) if root.ids.main_btn.state == 'normal' else (1,1,1,1)
                    size_hint: (1, 1) if root.ids.main_btn.state == 'normal' else (1.1, 1.1)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                Label:
                    text: '   Find\nYourself'
                    color: (50/255, 50/255, 50/255, 1) if root.ids.main_btn.state == 'normal' else (10/255, 10/255, 10/255, 1)
                    font_name: 'fonts/vintage.ttf'
                    font_size: (root.height + root.width)/25 if root.ids.main_btn.state == 'normal' else (root.height + root.width)/24

                Label:
                    text: 'Tap here'
                    font_name: 'fonts/vintage1'
                    font_size: (root.height + root.width)/38
                    color: (200/255, 200/255, 200/255, app.tap_here_opacity) if root.ids.main_btn.state == 'normal' else (0,0,0,0)

        BoxLayout:
            size_hint: (1, 0.075)
            pos_hint: {'center_x': .5, }
            padding: '10dp'
            spacing: '10dp'

            OptionButton:
                text: 'History' if app.language == 'english' else '내역'
                font_name: 'fonts/vintage2.otf' if app.language == 'english' else 'fonts/korean4'
                font_size: '40dp' if app.language == 'english' else '30dp'
                on_release:
                    app.root.current = 'history'
                    root.manager.transition.direction = 'left'
                    app.switch_screen.play()

            OptionButton:
                text: 'Setting' if app.language == 'english' else '설정'
                font_name: 'fonts/vintage2.otf' if app.language == 'english' else 'fonts/korean4'
                font_size: '40dp' if app.language == 'english' else '30dp'
                italic: True
                on_release:
                    app.root.current = 'setting'
                    root.manager.transition.direction = 'left'
                    app.switch_screen.play()

<QnAWindow>:
    name: 'qna'

    RelativeLayout:
        Image:
            source: 'images/sunset.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)

        Label:
            text: 'Your mood today:' if app.language == 'english' else '오늘 기분:'
            font_name: 'fonts/vintage1' if app.language == 'english' else 'fonts/korean4'
            font_size: dp(30)
            pos_hint: {'center_x': 0.5, 'center_y': 0.3}
        Slider:
            id: mood_slider
            value_track: True
            value_track_color: [0.8, 0.1, 0.9, 0.4]
            min: 0
            max: 200
            pos_hint: {'center_x': 0.5, 'center_y': 0.25}
            size_hint: (0.8, 0.05)
            value: root.mood_value
            on_value: root.on_slider_value(self)
            on_touch_up:
                root.save_answer(args[1], self)
                app.root.get_screen('history').ids.calendar_box.update_data(app.root.get_screen('qna').question, app.root.get_screen('qna').mood)
        Image:
            source: 'images/moods/normal.png' if root.mood == '' else 'images/moods/' + root.mood + '.png'
            pos_hint: {'center_x': 0.5, 'center_y': 0.175}
            color: (1,1,1,0) if root.mood == '' else (1,1,1,1)

        QuestionChatBox:
            id: question
            padding: (10, 0)
            pos_hint: {'x': 0.05, 'center_y': 0.9}
            font_name: 'fonts/korean1.ttf'
            text: root.question
            text_size: self.size
            line_height: 1.25
            padding_x: 20
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (len(self.text)/26, 0.085) if len(self.text) <= 19 else (0.75, 0.085) if len(self.text) <= 80 else (0.75, 0.095)
            color: (0, 0, 0)
        AnswerChatBox:
            id:answer
            pos_hint: {'right': 0.95, 'center_y': 0.7} if self.size_hint_y <= 0.25 else  {'right': 0.95, 'center_y': 0.65}
            text: root.answer
            padding_x: 20
            line_height: 1.25
            text_size: self.size
            font_name: 'fonts/korean1.ttf'
            halign: 'left'
            valign: 'middle'
            font_size:
                dp(17) if (len(self.text) < 250 and app.language == 'korean') or (app.language == 'english') else dp(15)
            size_hint: root.get_answerbox_size()
            color: (0, 0, 0)
        TypeBox:
            id: typebox
            text: 'Type your answer...' if app.language == 'english' else '답 입력...'
            font_name: 'fonts/korean1.ttf'
            size_hint: (0.8, 0.05)
            pos_hint: {'center_x': 0.5, 'center_y': 0.4}
            on_release:
                app.click.play()
                Factory.AnswerWriteBox().open()
                root.is_popup_open = True
        Button:
            text: '>> This question history <<' if app.language == 'english' else '>> 이 질문 내역 <<'
            font_name: 'fonts/korean2'
            font_size: dp(20) if self.state == 'normal' else dp(23)
            color: (1,1,1,1) if self.state == 'normal' else (215/255, 160/255, 220/255, 1)
            background_color: (0,0,0,0)
            background_normal: ''
            size_hint: (0.65, 0.05)
            pos_hint: {'center_x': 0.5, 'center_y':0.05}
            canvas.before:
                Color:
                    rgba:(0.8, 0.8, 0.8, 0.2)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [40]
            on_release:
                app.root.current = 'ques_history'
                app.root.get_screen('ques_history').previous_screen = 'qna'
                root.manager.transition.direction = 'left'
                app.root.get_screen('ques_history').last_answer(root.ques_id, root.question)
                app.switch_screen.play()

<QnAHistoryWindow>:
    name: 'qna_history'

    RelativeLayout:
        Image:
            source: 'images/sunset.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        Label:
            id: ques_id_saver
            color: (1, 1, 1, 0)

        Label:
            text: "Your mood:" if app.language == 'english' else '기분:'
            font_name: 'fonts/vintage1' if app.language == 'english' else 'fonts/korean4'
            font_size: dp(30)
            pos_hint: {'center_x': 0.5, 'center_y': 0.3}
        Slider:
            id: last_mood_slider
            min: 0
            max: 200
            value_track: True
            value_track_color: [0.8, 0.1, 0.9, 0.4]
            pos_hint: {'center_x': 0.5, 'center_y': 0.25}
            size_hint: (0.8, 0.05)
            disabled: True
        Image:
            id: last_mood
            pos_hint: {'center_x': 0.5, 'center_y': 0.175}
        QuestionChatBox:
            id: last_question
            pos_hint: {'x': 0.05, 'center_y': 0.9}
            font_name: 'fonts/korean1.ttf'
            padding_x: 20
            line_height: 1.25
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (len(self.text)/26, 0.085) if len(self.text) <= 19 else (0.75, 0.085) if len(self.text) <= 80 else (0.75, 0.095)
            color: (0, 0, 0)
        AnswerChatBox:
            id:last_answer
            pos_hint: {'right': 0.95, 'center_y': 0.7} if self.size_hint_y <= 0.25 else  {'right': 0.95, 'center_y': 0.6}
            padding_x: 20
            line_height: 1.25
            text_size: self.size
            font_name: 'fonts/korean1.ttf'
            halign: 'left'
            valign: 'middle'
            font_size: dp(17) if (len(self.text) < 250 and app.language == 'korean') or (app.language == 'english') else dp(15)
            size_hint: root.get_answerbox_size(self.text)
            color: (0, 0, 0)
        Button:
            text: '>> This question history <<' if app.language == 'english' else '>> 이 질문 내역 <<'
            font_name: 'fonts/korean2'
            font_size: dp(20) if self.state == 'normal' else dp(23)
            color: (1,1,1,1) if self.state == 'normal' else (215/255, 140/255, 220/255, 1)
            background_color: (0,0,0,0)
            background_normal: ''
            size_hint: (0.65, 0.05)
            pos_hint: {'center_x': 0.5, 'center_y':0.05}
            canvas.before:
                Color:
                    rgba:(0.8, 0.8, 0.8, 0.2)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [40]
            on_release:
                app.root.current = 'ques_history'
                app.root.get_screen('ques_history').previous_screen = 'qna_history'
                root.manager.transition.direction = 'left'
                app.root.get_screen('ques_history').last_answer(root.ids.ques_id_saver.text, root.ids.last_question.text)
                app.switch_screen.play()


<HistoryWindow>:
    name: 'history'
    id: history

    RelativeLayout:
        Image:
            source: 'images/pink.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        BoxLayout:
            orientation: 'vertical'
            TopBar:
                RelativeLayout:
                    Button:
                        id: previous_btn
                        background_color: (0,0,0,0)
                        background_normal: ''
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        size_hint: (0.4, 0.8)
                        on_release:
                            app.click.play()
                            root.change_month('previous')
                    Image:
                        source: 'images/previous.png'
                        size_hint: (0.8, 0.8) if root.ids.previous_btn.state == 'normal' else (0.9, 0.9)
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        color: (0.9, 0.9, 0.9, 0.7) if root.ids.previous_btn.state == 'normal' else (1, 1, 1, 0.7)
                Label:
                    id: select_month
                    text: root.today_text
                    font_name: 'fonts/korean2'
                    bold: True
                    color: (0,0,0)
                    bold: True
                    pos_hint: {'center_y': 0.5}
                    font_size: dp(40)
                RelativeLayout:
                    Button:
                        id: next_btn
                        background_color: (0,0,0,0)
                        background_normal: ''
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        size_hint: (0.4, 0.8)
                        on_release:
                            app.click.play()
                            root.change_month('next')
                    Image:
                        source: 'images/next.png'
                        size_hint: (0.8, 0.8) if root.ids.next_btn.state == 'normal' else (0.9, 0.9)
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        color: (0.9, 0.9, 0.9, 0.7) if root.ids.next_btn.state == 'normal' else (1, 1, 1, 0.7)
            ScrollView:
                id: scroll_box
                scroll_y: root.scroll_view_pos
                CalendarBox:
                    id: calendar_box
                    size_hint: (1, None)
                    height: 250 * root.days_in_month


<QuestionHistory>:
    name: 'ques_history'

    RelativeLayout:
        Image:
            source: 'images/pink.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        BoxLayout:
            orientation: 'vertical'
            TopBar:
                Label:
                    text: 'This Question Last 5 Times' if app.language == 'english' else '이 질문의 최근 다섯 번'
                    font_name: 'fonts/korean2'
                    bold: True
                    color: (0,0,0)
                    bold: True
                    pos_hint: {'center_y': 0.5}
                    font_size: dp(30)
            BoxLayout:
                padding: (0,25,0,25)
                spacing: dp(20)
                orientation: 'vertical'
                Label:
                    id: ques_his
                    font_name: 'fonts/korean1'
                    font_size: dp(18)
                    color: (0, 0, 0, 1)
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
                    padding_x: 15
                    size_hint: (0.9, 0.7)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                    canvas.before:
                        Color:
                            rgba: (200/255, 200/255, 200/255, 0.5)
                        RoundedRectangle:
                            size: self.size
                            pos: self.pos
                            radius: [20]
                Label:
                    text: 'Your answer:' if app.language == 'english' else '대답 내역:'
                    font_name: 'fonts/korean1'
                    font_size: dp(20)
                    size_hint: (1,0.4)
                    canvas.before:
                        Color:
                            rgba: (0.3, 0.3, 0.3, 0.5)
                        Rectangle:
                            size: self.size
                            pos: self.pos
                SelectQuestionHistory:
                    id: 0
                    size_hint: (1, 1)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                SelectQuestionHistory:
                    id: 1
                    size_hint: (0.975, 0.95)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                SelectQuestionHistory:
                    id: 2
                    size_hint: (0.95, 0.9)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                SelectQuestionHistory:
                    id: 3
                    size_hint: (0.925, 0.85)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                SelectQuestionHistory:
                    id: 4
                    size_hint: (0.9, 0.8)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}

<SettingWindow>:
    name: 'setting'
    RelativeLayout:
        Image:
            source: 'images/blue.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        SettingPopup:
            id: setting_popup
        BoxLayout:
            orientation: 'vertical'
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            size_hint: (0.8, 0.6)
            spacing: dp(10)
            BoxLayout:
                orientation: 'vertical'
                padding: [0,0,0,50]
                canvas.before:
                    Color:
                        rgba:(200/255, 200/255, 200/255, 0.4)
                    RoundedRectangle:
                        size: self.size
                        pos: self.pos
                        radius: [40]
                Label:
                    text: 'Language:' if app.language == 'english' else '언어:'
                    font_name: 'fonts/korean2'
                    font_size: dp(25)
                    color: (0,0,0,1)
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
                    padding_x: 15
                BoxLayout:
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                    size_hint: (1, 0.5)
                    spacing: dp(60)
                    padding: (20,0,20,0)
                    LanguageButton:
                        id: eng_btn
                        text: 'English' if app.language == 'english' else '영어'
                        state:'down' if root.language == 'english' else 'normal'
                        on_state:
                            root.eng_setting(self)
                            root.ids.setting_popup.show_popup_eng(self)

                    LanguageButton:
                        id: kor_btn
                        text: 'Korean' if app.language == 'english' else '한국어'
                        state: 'down' if root.language == 'korean' else 'normal'
                        on_state:
                            root.kor_setting(self)
                            root.ids.setting_popup.show_popup_kor(self)
                Label:
                    text: 'Background Music:' if app.language == 'english' else '배경 음악:'
                    font_name: 'fonts/korean2'
                    font_size: dp(25)
                    color: (0,0,0,1)
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
                    padding_x: 15
                Switch:
                    id: bg_music_switch
                    size_hint: (1 ,0.3)
                    pos_hint: {'center_x': 0.5}
                    active: True if app.music == 1 else False
                    on_active:
                        app.click.play()
                        root.music_setting(self)
                Label:
                    text: 'Effect Sound:' if app.language == 'english' else '효과음'
                    font_name: 'fonts/korean2'
                    font_size: dp(25)
                    color: (0,0,0,1)
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
                    padding_x: 15
                Switch:
                    id: ef_sound_switch
                    size_hint: (1 ,0.3)
                    pos_hint: {'center_x': 0.5}
                    active: True if app.sound == 1 else False
                    on_active:
                        app.click.play()
                        root.sound_setting(self)
        Button:
            size_hint: (0.3, 0.06)
            pos_hint: {'center_x': 0.5, 'center_y': 0.1}
            text: 'About app' if app.language == 'english' else '앱 정보'
            color: (1,1,1,1) if self.state == 'normal' else (0.6, 0.4, 0.8, 1)
            underline: True
            font_name: 'fonts/korean1'
            font_size: dp(18) if self.state == 'normal' else dp(20)
            background_color: (0,0,0,0)
            background_normal: ''
            on_release:
                app.click.play()
                Factory.Credit().open()


<OptionButton@Button>:
    background_color: (0,0,0,0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: (205/255, 140/255, 185/255, 1) if self.state == 'normal' else (165/255, 50/255, 145/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]
        Color:
            rgba: (165/255, 50/255, 145/255, 1) if self.state == 'normal' else (80/255, 0/255, 95/255, 1)
        Line:
            rounded_rectangle: (self.pos[0], self.pos[1], self.size[0], self.size[1], 20)
            width: 1.5

<QuestionChatBox@Label>:
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.5)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40,40,40,0]
        Triangle:
            points: (self.pos[0] - 15, self.pos[1], self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1]/4)


<AnswerChatBox@Label>:
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.5)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40,40,0,40]
        Triangle:
            points: (self.pos[0] + self.size[0], self.pos[1], self.pos[0] + self.size[0] + 15, self.pos[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1]/4)


<TypeBox@Button>:
    background_color: (0,0,0,0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.4) if self.state == 'normal' else (200/255, 200/255, 200/255, 0.7)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [50,50,50,50]


<TopBar@BoxLayout>:
    size_hint: (1, 0.08)
    canvas.before:
        Color:
            rgba: (240/255, 240/255, 240/255, 0.3)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [0,0,20,20]

<CalendarBox>:
    padding: (0,10,0,10)
    spacing: dp(5)

<BottomBar@BoxLayout>:
    size_hint: (1, 0.08)
    canvas.before:
        Color:
            rgba: (240/255, 240/255, 240/255, 0.3)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20,20,0,0]

<SelectDayLayout>:
    size_hint: (1, 0.25)
    pos_hint: {'center_x': .5, 'center_y': .5}
    SelectButton:
        id: select_btn
        on_release:
            app.root.current = root.screen_switch_setting(root.canvas_opacity_border)
            app.root.get_screen('qna').previous_screen = 'history'
            app.root.get_screen('qna_history').manager.transition.direction = 'left'
            app.root.get_screen('qna_history').access_history(root.ids.date.text, root.ids.year_saver.text)
            app.switch_screen.play()
    Label:
        id: year_saver
        color: (1, 1, 1, 0)
    BoxLayout:
        padding: ['5dp', 0, '5dp',0]
        spacing: dp(7)
        canvas.before:
            Color:
                rgba:
                    (200/255, 200/255, 200/255, root.canvas_opacity_button) if \
                    (root.ids.select_btn.disabled == False and root.ids.select_btn.state == 'normal') else \
                    (200/255, 200/255, 200/255, root.canvas_opacity_button * 2.5) if \
                    (root.ids.select_btn.disabled == False and root.ids.select_btn.state == 'down') else \
                    (100/255, 100/255, 100/255, root.canvas_opacity_button * 2)
            RoundedRectangle:
                size: self.size
                pos: self.pos
                radius: [20]
            Color:
                rgba: (200/255, 200/255, 200/255, root.canvas_opacity_border)
            Line:
                rounded_rectangle: (self.pos[0], self.pos[1], self.size[0], self.size[1], 20)
                width: 6
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.2 , 1)
            spacing: 7
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, root.canvas_opacity_line)
                Line:
                    points: (self.size[0] + dp(10), 0 + 10, self.size[0] + dp(10), self.size[1] - 10)
                    width: 2
            Label:
                id: date
                font_name: 'fonts/korean1.ttf'
                font_size: dp(16)
                text_size: self.size
                halign: 'center'
                valign: 'bottom'
            Label:
                id: weekday
                font_name: 'fonts/korean3.ttf'
                font_size: dp(16)
                text_size: self.size
                halign: 'center'
                valign: 'top'
        Label:
            id: question
            font_name: 'fonts/korean1.ttf'
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            padding_x: dp(10)
        Image:
            id: mood
            size_hint: (0.15 , 1)
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, root.canvas_opacity_line)
                Line:
                    points: (self.pos[0] - dp(7), 0 + 10, self.pos[0] - dp(7), self.size[1] - 10)
                    width: 2

<SelectButton@Button>:
    size_hint: (0.85, 1)
    pos_hint: {'right': 1}
    background_color: (1,0,0,0)
    background_normal: ''


<AnswerWriteBox@Popup>:
    background_color: (0,0,0,0)
    title: 'Your answer:' if app.language == 'english' else '대답:'
    title_align: 'center'
    title_font: 'fonts/korean2'
    title_size: dp(18)
    auto_dismiss: False
    size_hint: (0.9, 0.65)
    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    BoxLayout
        orientation: 'vertical'
        spacing: dp(10)
        TextInput:
            id: answer_text
            background_color: (0,0,0,0)
            multiline: True
            text: app.root.get_screen('qna').answer
            font_name: 'fonts/korean1.ttf'
            canvas.before:
                Color:
                    rgba: (1, 1, 1, 0.2)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [0,0,40,40]
                Color:
                    rgba: (1, 1, 1, 1)
        BoxLayout:
            size_hint: (1, 0.1)
            spacing: dp(200)
            PopupButton:
                pos_hint: {'x': 0, 'bottom': 0}
                text: 'Close' if app.language == 'english' else '닫기'
                on_release:
                    root.dismiss()
                    app.click.play()
                    app.root.get_screen('qna').is_popup_open = False
            PopupButton:
                pos_hint: {'right': 1, 'bottom': 0}
                text: 'Answer' if app.language == 'english' else '대답'
                on_release:
                    root.dismiss()
                    app.click.play()
                    app.root.get_screen('qna').is_popup_open = False
                    app.root.get_screen('qna').set_answer(answer_text.text)
                    app.root.get_screen('history').ids.calendar_box.update_data(app.root.get_screen('qna').question, app.root.get_screen('qna').mood)

<PopupButton@Button>:
    font_name: 'fonts/korean2'
    font_size: dp(20)
    background_color: (0, 0, 0, 0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: (1, 1, 1, 0.25) if self.state == 'normal' else (1, 1, 1, 0.4)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]

<SelectQuestionHistory>:
    BoxLayout:
        padding: ['5dp', 0, '5dp',0]
        spacing: dp(7)
        canvas.before:
            Color:
                rgba:(root.canvas_background_color, root.canvas_background_color, root.canvas_background_color, root.canvas_background_alpha)
            RoundedRectangle:
                size: self.size
                pos: self.pos
                radius: [20]
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.2 , 1)
            spacing: 7
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, 1)
                Line:
                    points: (self.size[0] + dp(10), 0 + 10, self.size[0] + dp(10), self.size[1] - 10)
                    width: 2
            Label:
                id: date
                font_name: 'fonts/korean1.ttf'
                font_size: dp(16)
                text_size: self.size
                halign: 'center'
                valign: 'bottom'
            Label:
                id: year
                font_name: 'fonts/korean1.ttf'
                font_size: dp(16)
                text_size: self.size
                halign: 'center'
                valign: 'top'
        Label:
            id: answer
            font_name: 'fonts/korean1.ttf'
            text_size: self.size
            font_size:
                dp(15) if (app.language == 'english' and len(self.text) <= 200 and self.text.count('\n') < 7) or \
                (app.language == 'korean' and len(self.text) <= 120 and self.text.count('\n') < 7) else dp(11)
            halign: 'left'
            valign: 'middle'
            padding_x: dp(10)
        Image:
            id: mood
            size_hint: (0.15 , 1)
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, 1)
                Line:
                    points: (self.pos[0] - dp(7), 0 + 10, self.pos[0] - dp(7), self.size[1] - 10)
                    width: 2

<LanguageButton@ToggleButton>:
    font_name: 'fonts/korean1'
    font_size: dp(17) if self.state == 'normal' else dp(20)
    background_color: (0, 0, 0, 0)
    background_normal: ''
    on_release:
        app.click.play()
    canvas.before:
        Color:
            rgba: (0.5, 0.5, 0.5, 0.6) if self.state == 'normal' else (1, 1, 1, 0.4)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]

<SettingPopup>:
    background_color: (0,0,0,0)
    size_hint: (0.8, 0.075)
    pos_hint: {'center_x': 0.5, 'center_y': 0.86}
    RelativeLayout:
        Label:
            id: popup_eng
            background_color: (0,0,0,0)
            multiline: True
            color: (0,0,0,0)
            text: 'Please restart app to apply language change'
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            font_name: 'fonts/korean1.ttf'
            font_size: dp(15)
            padding_x: 10
            canvas.before:
                Color:
                    rgba: (1, 1, 1, root.popup_opacity_eng)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [20,20,20,20]
                Color:
                    rgba: (1, 1, 1, 1)
        Label:
            id: popup_kor
            background_color: (0,0,0,0)
            multiline: True
            color: (0,0,0,0)
            text: '언어 변경을 적용하려면 앱을 재시작하십시오'
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            font_name: 'fonts/korean1.ttf'
            font_size: dp(16)
            padding_x: 10
            canvas.before:
                Color:
                    rgba: (1, 1, 1, root.popup_opacity_kor)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [20,20,20,20]
                Color:
                    rgba: (1, 1, 1, 1)

<Credit@Popup>:
    size_hint: (0.85, 0.8)
    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    auto_dismiss: True
    background_color: (0,0,0,0)
    title_size: 0
    tittle: ''
    separator_height: 0
    separator_color: (0,0,0,0)
    BoxLayout:
        orientation: 'vertical'
        spacing: 10
        Label:
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            color: (0,0,0,1)
            font_size: dp(20)
            line_height: 1.25
            font_name: 'fonts/korean1'
            padding_x: 20
            text:
                'Inspired by the book "Q&A a Day: 5-Year Journal" by Potter Gift\n\n' + \
                '--------\nMusic and effect sounds by SergeQuadrado, UNIVERSFIELD from Pixabay\n\n' + \
                '--------\nImages by Pete Linforth, Wilson Joseph and Albert-Paul from Pixabay\n\n' + \
                '--------\nDesigned and developed by LE QUANG TRUNG\n\n' + \
                'Contact: rikateamovt1@gmail.com'
            canvas.before:
                Color:
                    rgba: (0.7, 0.7, 0.7, 0.8)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [40,40,40,40]
        RelativeLayout:
            size_hint: (0.25, 0.08)
            pos_hint: {'right': 1}
            Button:
                background_color: (1,0,0,0)
                background_normal: ''
                text: 'Close' if app.language == 'english' else '닫기'
                font_name: 'fonts/korean1'
                font_size: dp(20)
                color: (0,0,0,1)
                canvas.before:
                    Color:
                        rgba: (0.7, 0.7, 0.7, 0.6) if self.state == 'normal' else (0.7, 0.7, 0.7, 1)
                    RoundedRectangle:
                        size: self.size
                        pos: self.pos
                        radius: [20,20,20,20]
                on_release:
                    app.click.play()
                    root.dismiss()

