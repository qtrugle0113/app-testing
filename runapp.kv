#:import Factory kivy.factory.Factory
WindowManager:
    MainWindow:
    QnAWindow:
    HistoryWindow:
    QnAHistoryWindow:
    SettingWindow:
#QnAWindow:


<MainWindow>:
    name: 'main'

    RelativeLayout:
        RelativeLayout:
            Image:
                source: 'images/pink.jpg'
                allow_stretch: True
                keep_ratio: False

            RelativeLayout:
                pos_hint: {'center_x': 0.5, 'center_y': 0.6}
                size_hint: (0.6, 0.25)

                Button:
                    id: main_btn
                    background_color: (1,0,0,0)
                    background_normal: ''
                    #size_hint: (0.55, 0.2) if root.width < root.height else (0.5, 0.5) if root.width/root.height < 1.75 else (0.3, 0.5)
                    size: root.size
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                    on_release:
                        app.root.current = 'qna'
                        root.manager.transition.direction = 'left'

                Image:
                    source: 'images/color_stain.png'
                    color: (1,1,1,0.5) if root.ids.main_btn.state == 'normal' else (1,1,1,1)
                    size_hint: (1, 1) if root.ids.main_btn.state == 'normal' else (1.1, 1.1)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                Label:
                    text: '   Find\nYourself'
                    color: (50/255, 50/255, 50/255, 1) if root.ids.main_btn.state == 'normal' else (10/255, 10/255, 10/255, 1)
                    font_name: 'fonts/vintage.ttf'
                    #font_size: (self.height + self.width)/25 if root.ids.main_btn.state == 'normal' else (self.height + self.width)/24
                    font_size: (root.height + root.width)/25 if root.ids.main_btn.state == 'normal' else (root.height + root.width)/24

                Label:
                    text: 'Click here'
                    font_name: 'fonts/vintage1'
                    font_size: (root.height + root.width)/38
                    color: (200/255, 200/255, 200/255, 0.3) if root.ids.main_btn.state == 'normal' else (0,0,0,0)
                    #pos_hint: {'center_x': 0.5, 'center_y': 0.5}

        BoxLayout:
            size_hint: (1, 0.075)
            pos_hint: {'center_x': .5, }
            padding: '10dp'
            spacing: '10dp'

            OptionButton:
                text: 'History'
                font_name: 'fonts/vintage2.otf'
                font_size: '40dp'
                on_release:
                    app.root.current = 'history'
                    root.manager.transition.direction = 'left'

            OptionButton:
                text: 'Setting'
                font_name: 'fonts/vintage2.otf'
                font_size: '40dp'
                on_release:
                    app.root.current = 'setting'
                    root.manager.transition.direction = 'left'

<QnAWindow>:
    name: 'qna'

    RelativeLayout:
        Image:
            source: 'images/sunset.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)

        Label:
            text: "Your mood today:"
            font_name: 'fonts/vintage1'
            font_size: dp(30)
            pos_hint: {'center_x': 0.5, 'center_y': 0.2}
        Slider:
            id: mood_slider
            value_track: True
            value_track_color: [0.8, 0.1, 0.9, 0.4]
            min: 0
            max: 200
            pos_hint: {'center_x': 0.5, 'center_y': 0.15}
            size_hint: (0.8, 0.05)
            value: root.mood_value
            on_value: root.on_slider_value(self)
            on_touch_up:
                root.save_answer(args[1], self)
                app.root.get_screen('history').ids.calendar_box.update_data(app.root.get_screen('qna').question, app.root.get_screen('qna').mood)
        Image:
            source: 'images/moods/normal.png' if root.mood == '' else 'images/moods/' + root.mood + '.png'
            #size_hint: (None, None)
            #width: dp(70)
            #height: dp(70)
            pos_hint: {'center_x': 0.5, 'center_y': 0.075}
            color: (1,1,1,0) if root.mood == '' else (1,1,1,1)

        QuestionChatBox:
            id: question
            padding: (10, 0)
            pos_hint: {'x': 0.05, 'center_y': 0.9}
            font_name: 'fonts/korean1.ttf'
            text: root.question
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (0.75, 0.08)
            color: (0, 0, 0)
        AnswerChatBox:
            id:answer
            padding: (10, 0)
            #pos_hint: {'center_x': 0.55, 'center_y': 0.75}
            pos_hint: {'right': 0.95, 'center_y': 0.7}
            text: root.answer
            text_size: self.size
            font_name: 'fonts/korean1.ttf'
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (0, 0) if root.answer == '' else (0.75,0.05)
            color: (0, 0, 0)
        TypeBox:
            id: typebox
            text: 'Type your answer...'
            font_name: 'fonts/korean1.ttf'
            size_hint: (0.8, 0.05)
            pos_hint: {'center_x': 0.5, 'center_y': 0.3}
            on_release: Factory.AnswerWriteBox().open()

        Button:
            text: 'Back'
            size_hint: (None, None)
            size: ('70dp', '70dp')
            on_release:
                app.root.current = 'main'
                root.manager.transition.direction = 'right'


<QnAHistoryWindow>:
    name: 'qna_history'

    RelativeLayout:
        Image:
            source: 'images/sunset.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        Label:
            text: "Your mood:"
            font_name: 'fonts/vintage1'
            font_size: dp(25)
            pos_hint: {'center_x': 0.5, 'center_y': 0.2}
        Slider:
            id: last_mood_slider
            min: 0
            max: 200
            value_track: True
            value_track_color: [0.8, 0.1, 0.9, 0.4]
            pos_hint: {'center_x': 0.5, 'center_y': 0.15}
            size_hint: (0.8, 0.05)
            #value: root.mood_value
            disabled: True
        Image:
            id: last_mood
            source: 'images/moods/normal.png' if root.mood == '' else 'images/moods/' + root.mood + '.png'
            #size_hint: (None, None)
            #width: dp(70)
            #height: dp(70)
            pos_hint: {'center_x': 0.5, 'center_y': 0.075}
            color: (1,1,1,0) if root.mood == '' else (1,1,1,1)
        QuestionChatBox:
            id: last_question
            padding: (10, 0)
            pos_hint: {'x': 0.05, 'center_y': 0.9}
            font_name: 'fonts/korean1.ttf'
            text: root.question
            text_size: self.size
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (0.75, 0.08) if root.width < root.height else (0.3, 0.08)
            color: (0, 0, 0)
        AnswerChatBox:
            id:last_answer
            padding: (10, 0)
            pos_hint: {'right': 0.95, 'center_y': 0.7}
            text: root.answer
            text_size: self.size
            font_name: 'fonts/korean1.ttf'
            halign: 'left'
            valign: 'middle'
            font_size: dp(17)
            size_hint: (0.75, 0.05)
            color: (0, 0, 0)


<HistoryWindow>:
    name: 'history'

    RelativeLayout:
        Image:
            source: 'images/pink.jpg'
            allow_stretch: True
            keep_ratio: False
            color: (1,1,1,0.5)
        BoxLayout:
            orientation: 'vertical'
            TopBar:
                Label:
                    text: root.today_text
                    font_name: 'fonts/kosan'
                    color: (0,0,0)
                    bold: True
                    pos_hint: {'center_y': 0.5}
                    font_size: dp(30)
            ScrollView:
                CalendarBox:
                    id: calendar_box
                    size_hint: (1, None)
                    height: 250 * root.days_in_month
            BottomBar:
                Button:
                    text: 'Back'
                    size_hint: (None, None)
                    size: ('70dp', '70dp')
                    on_release:
                        app.root.current = 'main'
                        root.manager.transition.direction = 'right'


<SettingWindow>:
    name: 'setting'

    RelativeLayout:
        Image:
            source: 'images/blue.jpg'
            allow_stretch: True
            keep_ratio: False

        Label:
            text: 'Setting'
            #font_name: 'fonts/vintage1'
            font_size: '80dp'
            outline_color: (100/255, 100/255, 100/255)
            outline_width: '10dp'

        Button:
            text: 'Back'
            size_hint: (None, None)
            size: ('70dp', '70dp')
            on_release:
                app.root.current = 'main'
                root.manager.transition.direction = 'right'


<OptionButton@Button>:
    background_color: (0,0,0,0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: (205/255, 140/255, 185/255, 1) if self.state == 'normal' else (165/255, 50/255, 145/255, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20]
        Color:
            rgba: (165/255, 50/255, 145/255, 1) if self.state == 'normal' else (80/255, 0/255, 95/255, 1)
        Line:
            rounded_rectangle: (self.pos[0], self.pos[1], self.size[0], self.size[1], 20)
            width: 1.5

<QuestionChatBox@Label>:
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.5)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40,40,40,0]
        Triangle:
            points: (self.pos[0] - 15, self.pos[1], self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1]/4)


<AnswerChatBox@Label>:
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.5)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [40,40,0,40]
        Triangle:
            points: (self.pos[0] + self.size[0], self.pos[1], self.pos[0] + self.size[0] + 15, self.pos[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1]/4)


<TypeBox@Button>:
    background_color: (0,0,0,0)
    background_normal: ''
    canvas.before:
        Color:
            rgba: (200/255, 200/255, 200/255, 0.4) if self.state == 'normal' else (200/255, 200/255, 200/255, 0.7)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [50,50,50,50]


<TopBar@BoxLayout>:
    size_hint: (1, 0.08)
    canvas.before:
        Color:
            rgba: (240/255, 240/255, 240/255, 0.3)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [0,0,20,20]

<CalendarBox>:
    padding: (0,10,0,10)
    spacing: dp(5)
    canvas.before:
        Color:
            rgba: (240/255, 0/255, 0/255, 0)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [10,10,10,10]

<BottomBar@BoxLayout>:
    size_hint: (1, 0.08)
    canvas.before:
        Color:
            rgba: (240/255, 240/255, 240/255, 0.3)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [20,20,0,0]

<SelectDayLayout>:
    size_hint: (1, 0.25)
    pos_hint: {'center_x': .5, 'center_y': .5}
    SelectButton:
        id: select_btn
        on_release:
            #app.root.current = 'qna_history'
            app.root.get_screen('qna_history').manager.transition.direction = 'left'
            app.root.get_screen('qna_history').access_history(root.ids.date.text)
    BoxLayout:
        id: cbox
        padding: ['5dp', 0, '5dp',0]
        spacing: dp(7)
        canvas.before:
            Color:
                id: canvas_color
                rgba: (200/255, 200/255, 200/255, 0.4) if (root.ids.select_btn.disabled == False and root.ids.select_btn.state == 'normal') else (200/255, 200/255, 200/255, 1) if (root.ids.select_btn.disabled == False and root.ids.select_btn.state == 'down') else (100/255, 100/255, 100/255, 0.8)
            RoundedRectangle:
                size: self.size
                pos: self.pos
                radius: [20]
        Label:
            id: date
            font_name: 'fonts/korean1.ttf'
            size_hint: (0.2 , 1)
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, 1)
                Line:
                    points: (self.size[0], 0 + 10, self.size[0], self.size[1] - 10)
                    width: 2
        Label:
            id: question
            font_name: 'fonts/korean1.ttf'
            text_size: self.size
            halign: 'left'
            valign: 'middle'
        Image:
            id: mood
            size_hint: (0.15 , 1)
            canvas.before:
                Color:
                    rgba: (0.3, 0.3, 0.3, 1)
                Line:
                    points: (self.pos[0] - dp(5), 0 + 10, self.pos[0] - dp(5), self.size[1] - 10)
                    width: 2

<SelectButton@Button>:
    size_hint: (0.85, 1)
    pos_hint: {'right': 1}
    #background_color: (200/255, 200/255, 200/255, 0.4) if self.state == 'normal' else (200/255, 200/255, 200/255, 1)
    background_color: (1,0,0,0)
    background_normal: ''
    #canvas.before:
    #    Color:
    #        id: canvas_color
    #        #rgba: (200/255, 200/255, 200/255, 0.4) if self.state == 'normal' else (200/255, 200/255, 200/255, 1)
    #        rgba: (200/255, 200/255, 200/255, 0.4) if (self.disabled == False and self.state == 'normal') else (200/255, 200/255, 200/255, 1) if (self.disabled == False and self.state == 'down') else (100/255, 100/255, 100/255, 0.8)
    #    RoundedRectangle:
    #        size: self.size
    #        pos: self.pos
    #        radius: [20]


<AnswerWriteBox@Popup>:
    background_color: (0,0,0,0)
    title: 'Your answer:'
    font_name: 'fonts/korean1.ttf'
    auto_dismiss: False
    size_hint: (0.9, 0.65)
    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    BoxLayout
        orientation: 'vertical'
        spacing: dp(10)
        TextInput:
            id: answer_text
            background_color: (0,0,0,0)
            multiline: True
            text: app.root.get_screen('qna').answer
            font_name: 'fonts/korean1.ttf'
            #font_size: dp(15)
            canvas.before:
                Color:
                    rgba: (1, 1, 1, 0.2)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [0,0,40,40]
                Color:
                    rgba: (1, 1, 1, 1)
        BoxLayout:
            size_hint: (1, 0.1)
            spacing: dp(200)
            Button:
                #size_hint: (0.1, 1)
                #size: ('70dp', '70dp')
                pos_hint: {'x': 0, 'bottom': 0}
                text: 'Close'
                font_size: dp(15)
                on_release:
                    root.dismiss()
            Button:
                #size_hint: (0.1, 1)
                #size: ('70dp', '70dp')
                pos_hint: {'right': 1, 'bottom': 0}
                text: 'Answer'
                font_size: dp(15)
                on_release:
                    root.dismiss()
                    app.root.get_screen('qna').set_answer(answer_text.text)
                    app.root.get_screen('history').ids.calendar_box.update_data(app.root.get_screen('qna').question, app.root.get_screen('qna').mood)